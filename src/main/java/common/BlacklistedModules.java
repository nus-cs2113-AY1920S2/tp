package common;

import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.HashSet;
import java.util.Set;
import logic.modulelogic.ModuleHandler;

/**
 * Contains all modules in AY19/20 with ill-formated JSON data.
 */
public class BlacklistedModules {
    private static final String[] arr = {
        "ACC3704",
        "AR1101",
        "AR2101",
        "BMA5505",
        "BMA5801",
        "BMA5902",
        "BMC5003A",
        "BMC5004A",
        "BMC5004B",
        "BMC5007A",
        "BMC5008B",
        "BMC5011B",
        "BMC5012",
        "BMC5012A",
        "BMC5022",
        "BMC5028",
        "BMC5033",
        "BME5043",
        "BME5049",
        "BME5056A",
        "BME5056B",
        "BMF5344",
        "BMK6111R",
        "BMM5101",
        "BMM5105",
        "BMS5900",
        "BMU5003",
        "BMU5006",
        "BMU5008",
        "BMU5014",
        "BMU5017",
        "BMU5018",
        "BSN3713",
        "CE4257B",
        "CE5104A",
        "CE5106A",
        "CE5106B",
        "CE5107B",
        "CE5108A",
        "CE5113A",
        "CE5113B",
        "CE5509A",
        "CE5509B",
        "CE5603A",
        "CE5603B",
        "CE5610B",
        "CE5611B",
        "CE5806A",
        "CE5883A",
        "CM1417X",
        "CN1111E",
        "CN2116E",
        "CN2125E",
        "CN3124E",
        "CN4227E",
        "CN4233E",
        "CN4240E",
        "CN4242E",
        "CS1010X",
        "DEP5111",
        "DL5103",
        "DL5201",
        "EB5001",
        "EB5002",
        "EB5102",
        "EB5103",
        "EB5104",
        "EB5201",
        "EB5203",
        "EB5204",
        "EB5205",
        "EB5206",
        "EB5207",
        "EB5208",
        "EBA5001",
        "EBA5002",
        "EBA5003",
        "EBA5004",
        "EBA5005",
        "EBA5006",
        "EE3331E",
        "EE5020",
        "EE5022",
        "EE5024",
        "EE5026",
        "EE5027",
        "EG3301R",
        "ESE5202A",
        "ESE5202B",
        "ESE5402A",
        "ESE5901A",
        "ESE5901B",
        "FIN6003",
        "GMS1000",
        "GMS6810",
        "GMS6812",
        "GMS6850",
        "GMS6904",
        "GMS6951",
        "IE2110E",
        "IE4259E",
        "IL5101",
        "IL5102",
        "IL5103",
        "IL5104",
        "IL5105",
        "IL5106",
        "IL5202",
        "IL5203",
        "IL5204",
        "ISY5001",
        "ISY5002",
        "ISY5003",
        "ISY5004",
        "ISY5005",
        "IT5001",
        "IT5003",
        "IT5004",
        "KE5006",
        "KE5106",
        "KE5107",
        "KE5108",
        "KE5205",
        "KE5206",
        "KE5207",
        "KE5208",
        "LCC5365",
        "LCC5366",
        "LL4358Z",
        "LL4359Z",
        "LL4360Z",
        "LL4361Z",
        "LL5358Z",
        "LL5359Z",
        "LL5360Z",
        "LL5361Z",
        "LL6358Z",
        "LL6359Z",
        "LL6360Z",
        "LL6361Z",
        "LSM3211",
        "MA1301X",
        "MUA1115",
        "MUA1153",
        "MUA2153",
        "MUA2154",
        "MUA2201",
        "MUA3153",
        "MUA3154",
        "MUA3163",
        "MUA3216",
        "MUA3228",
        "MUA4113",
        "MUA4153",
        "MUA4154",
        "NUR1114A",
        "NUR1117",
        "NUR2120",
        "NUR2122",
        "NUR2202C",
        "NUR3113",
        "NUR3114",
        "NUR3117",
        "NUR3118",
        "NUR3202C",
        "NUR3203C",
        "OT5203A",
        "OT5203B",
        "OT5204A",
        "OT5206A",
        "OT5902",
        "OT5905",
        "OT5906",
        "OT5908",
        "OT5911",
        "OT5912",
        "PP5701",
        "PP5702",
        "PP5705",
        "PP5722",
        "PP5723",
        "PP6702",
        "RE5001",
        "SA4101",
        "SA4102",
        "SA4104",
        "SA4105",
        "SA4106",
        "SA4108",
        "SG4205",
        "SG4207",
        "SG4210",
        "SG5013",
        "SG5015",
        "SG5016",
        "SG5017",
        "SG5018",
        "SG5101",
        "SG5102",
        "SG5103",
        "SG5208",
        "SG5214",
        "SG5225",
        "SG5233",
        "SG5234",
        "SG5235",
        "SG5238",
        "SP2201",
        "SPH5311",
        "SPH5410",
        "SPH5411",
        "SPH6003",
        "ST1232",
        "ST5241A",
        "SWE5001",
        "SWE5002",
        "SWE5003",
        "SWE5004",
        "SWE5005",
        "TBA3102",
        "TC1411",
        "TC1422",
        "TCN1111",
        "TCN1411",
        "TCN1422",
        "TCN2116",
        "TCN2125",
        "TCN3124",
        "TCN4227",
        "TCN4233",
        "TCN4240",
        "TCN4242",
        "TE2101",
        "TEE2101",
        "TEE3331",
        "TIE2110",
        "TIE4259",
        "TSC3222"
    };
    public static final HashSet<String> blacklistModule = new HashSet<>(Arrays.asList(arr));

    /**
     * Run this to retrieve all the modules that doesn't follow the conventional format and
     * store it into /UnformattedModules file and
     * update the static final HashSet blacklistModule accordingly.
     */
    public static void main(String[] args) throws IOException {
        FileWriter fw = new FileWriter("UnformattedModules", true);
        URL url = new URL("https://api.nusmods.com/v2/2019-2020/moduleList.json");
        HttpURLConnection request = (HttpURLConnection) url.openConnection();
        request.connect();
        //Convert the input stream to a json element
        JsonElement root = JsonParser.parseReader(new InputStreamReader((InputStream) request.getContent()));
        JsonArray rootObj = root.getAsJsonArray();
        for (int i = 0; i < rootObj.size(); i++) {
            JsonObject module = rootObj.get(i).getAsJsonObject();
            String moduleCode = module.get("moduleCode").toString().replaceAll("^.|.$", "");
            try {
                ModuleHandler myModuleHandler = new ModuleHandler(moduleCode);
                myModuleHandler.generateModule();
            } catch (Exception e) {
                fw.write(moduleCode + "\n");
            }
        }
        fw.close();
    }
}

